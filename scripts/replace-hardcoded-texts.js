const fs = require('fs');
const path = require('path');
const glob = require('glob');

// –ú–∞–ø–ø–∏–Ω–≥ —Ö–∞—Ä–¥–∫–æ–¥–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ –∫–ª—é—á–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const textMappings = {
    // Auth texts
    '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç': 'notifications.auth.passwordMismatch',
    '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞': 'notifications.auth.loginError',
    '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ email –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞': 'notifications.auth.registrationSuccess',
    '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ email –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏': 'notifications.auth.registrationError',
    '–ï—Å–ª–∏ email —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –≤–∞—à email': 'notifications.auth.passwordResetSuccess',
    '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑': 'notifications.auth.passwordResetError',
    '–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω': 'notifications.auth.passwordChangeSuccess',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑': 'notifications.auth.passwordChangeError',
    '–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google': 'notifications.auth.oauthSuccess',
    '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ —á–µ—Ä–µ–∑ Google': 'notifications.auth.oauthError',
    '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏': 'notifications.auth.oauthGeneralError',
    '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º': 'notifications.auth.emailNotConfirmed',
    '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ': 'notifications.auth.tooManyAttempts',
    '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤': 'notifications.auth.passwordMinLength',
    '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å email –∞–¥—Ä–µ—Å–∞': 'notifications.auth.invalidEmail',
    '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑': 'notifications.auth.generalError',
    
    // PWA texts
    '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è': 'notifications.pwa.loadError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π': 'notifications.pwa.loadListError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å PWA': 'notifications.pwa.createError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å PWA': 'notifications.pwa.updateError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ': 'notifications.pwa.deleteError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è': 'notifications.pwa.statusChangeError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø': 'notifications.pwa.logoUploadError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø': 'notifications.pwa.logoDeleteError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã': 'notifications.pwa.screenshotUploadError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç': 'notifications.pwa.screenshotDeleteError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤': 'notifications.pwa.screenshotOrderError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã': 'notifications.pwa.mediaUploadError',
    '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª': 'notifications.pwa.mediaDeleteError',
    '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ, –¥–æ–º–µ–Ω –∏ URL –∫–∞–∑–∏–Ω–æ': 'notifications.pwa.requiredFields',
    'Casino PWA —Å–æ–∑–¥–∞–Ω–æ! PWA —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é': 'notifications.pwa.createSuccess',
    
    // Domain texts
    '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.': 'notifications.domain.searchError',
    '–î–æ–º–µ–Ω—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º': 'notifications.domain.noDomainsFound',
    '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª–µ–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ–º–µ–Ω–æ–≤.': 'notifications.domain.searchTips',
    '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ–º–µ–Ω': 'notifications.domain.purchaseError',
    '–î–æ–º–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω': 'notifications.domain.purchaseSuccess',
    
    // UI texts
    '–ù–∞–∑–∞–¥': 'ui.back',
    '–î–∞–ª–µ–µ': 'ui.next',
    '–û—Ç–º–µ–Ω–∞': 'ui.cancel',
    '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å': 'ui.save',
    '–£–¥–∞–ª–∏—Ç—å': 'ui.delete',
    '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å': 'ui.edit',
    '–î–æ–±–∞–≤–∏—Ç—å': 'ui.add',
    '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å': 'ui.confirm',
    '–ó–∞–∫—Ä—ã—Ç—å': 'ui.close',
    '–ó–∞–≥—Ä—É–∑–∫–∞...': 'ui.loading',
    '–û—à–∏–±–∫–∞': 'ui.error',
    '–£—Å–ø–µ—Ö': 'ui.success',
    '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ': 'ui.warning',
    
    // Form labels
    '–ò–º—è': 'ui.name',
    'Email': 'ui.email',
    '–ü–∞—Ä–æ–ª—å': 'ui.password',
    '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å': 'ui.confirmPassword',
    '–û–ø–∏—Å–∞–Ω–∏–µ': 'ui.description',
    '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': 'ui.category',
    '–Ø–∑—ã–∫': 'ui.language',
    '–í–µ—Ä—Å–∏—è': 'ui.version',
    '–†–∞–∑–º–µ—Ä': 'ui.size',
    '–†–µ–π—Ç–∏–Ω–≥': 'ui.rating',
    '–û—Ç–∑—ã–≤—ã': 'ui.reviews',
    '–°–∫–∞—á–∏–≤–∞–Ω–∏—è': 'ui.downloads',
    '–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥': 'ui.ageRating',
    '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': 'ui.developer',
    '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ': 'ui.lastUpdated',
    
    // Status
    '–ê–∫—Ç–∏–≤–µ–Ω': 'ui.active',
    '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω': 'ui.inactive',
    '–ß–µ—Ä–Ω–æ–≤–∏–∫': 'ui.draft',
    '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ': 'ui.published',
    '–í –æ–∂–∏–¥–∞–Ω–∏–∏': 'ui.pending',
    '–ó–∞–≤–µ—Ä—à–µ–Ω–æ': 'ui.completed',
    '–û—à–∏–±–∫–∞': 'ui.failed'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª–µ
function replaceTextInFile(filePath) {
    let content = fs.readFileSync(filePath, 'utf8');
    let hasChanges = false;
    
    // –ó–∞–º–µ–Ω—è–µ–º —Ö–∞—Ä–¥–∫–æ–¥–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥—ã
    for (const [hardcodedText, translationKey] of Object.entries(textMappings)) {
        const regex = new RegExp(`['"]${hardcodedText.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}['"]`, 'g');
        if (regex.test(content)) {
            content = content.replace(regex, `t('${translationKey}')`);
            hasChanges = true;
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç useTranslation –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (hasChanges && !content.includes('useTranslation')) {
        const importRegex = /import.*from.*['"]react['"]/;
        if (importRegex.test(content)) {
            content = content.replace(
                /import.*from.*['"]react['"]/,
                `import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';`
            );
        } else {
            content = content.replace(
                /import React.*from ['"]react['"]/,
                `import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';`
            );
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º const { t } = useTranslation(); –≤ –Ω–∞—á–∞–ª–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        const componentRegex = /export default function (\w+)/;
        if (componentRegex.test(content)) {
            content = content.replace(
                /export default function (\w+)/,
                `export default function $1() {\n    const { t } = useTranslation();`
            );
        }
    }
    
    if (hasChanges) {
        fs.writeFileSync(filePath, content, 'utf8');
        console.log(`‚úÖ Updated: ${filePath}`);
    }
}

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ TSX —Ñ–∞–π–ª—ã
const tsxFiles = glob.sync('src/**/*.tsx', { ignore: ['src/i18n/**'] });

console.log('üîÑ Starting replacement of hardcoded texts...');

tsxFiles.forEach(file => {
    try {
        replaceTextInFile(file);
    } catch (error) {
        console.error(`‚ùå Error processing ${file}:`, error.message);
    }
});

console.log('‚úÖ Finished replacing hardcoded texts!');
